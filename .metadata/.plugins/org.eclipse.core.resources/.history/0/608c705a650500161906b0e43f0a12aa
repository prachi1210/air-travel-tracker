package projectpackage;

import java.util.List;

import de.fhpotsdam.unfolding.data.Feature;
import de.fhpotsdam.unfolding.data.PointFeature;
import de.fhpotsdam.unfolding.marker.SimpleLinesMarker;
import de.fhpotsdam.unfolding.marker.SimplePointMarker;
import processing.core.PConstants;
import processing.core.PGraphics;
import processing.core.PImage;

public class AirportMarker extends SimplePointMarker{
	
	private int radius = 3;
	PImage img;
	
	public void setIcon(PImage temp)
	{
		img = temp;
	}
	
	public AirportMarker(Feature city) {
		super(((PointFeature)city).getLocation(), city.getProperties());
	
	}
	
	public void draw(PGraphics pg, float x, float y) {
		if (!hidden) {
			drawMarker(pg, x, y);
			if (selected) {
				showTitle(pg, x, y);
			}
		}
	}
	
	public void drawMarker(PGraphics pg, float x, float y) {
		pg.fill(11);
		//img.resize(10,10);
		pg.ellipse(10,10,x,y);
		//pg.image(img,x,y);
		if (selected) {
			showTitle(pg, x, y);
		}
	}

	public void showTitle(PGraphics pg, float x, float y) {
		 // show rectangle with title
		// show routes
		
		String id = "ID : " + getId();
		String city = getCity();
		
		pg.pushStyle();
		pg.fill(255,255,255);
		pg.textSize(12);
		pg.rectMode(PConstants.CORNER);
		pg.rect(x,y-8*radius,Math.max(pg.textWidth(id),pg.textWidth(city))+6,8*radius);
		pg.fill(0,0,0);
		pg.textAlign(PConstants.LEFT,PConstants.TOP);
		pg.text(id,x+3,y-7*radius);
		pg.text(city,x+3,y-4*radius);
		
		pg.popStyle();
	}
	
	public String getCity()
	{
		return getStringProperty("name");
	}	
}
